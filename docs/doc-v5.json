{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "ott-backend-v3 server.",
        "title": "Swagger API Version 3",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "thu.nguyen.thuy@dzones.vn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "",
    "basePath": "/backend/cm/v3",
    "paths": {
        "/geo-check": {
            "get": {
                "description": "Check Geo Ip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geo"
                ],
                "summary": "CheckGeoIp",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/ribbon_v3/{ribbon_id}": {
            "get": {
                "description": "Show a ribbon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ribbon"
                ],
                "summary": "Show a ribbon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    },
                    {
                        "type": "number",
                        "description": "order",
                        "name": "order",
                        "in": "query",
                        "value": 3
                    },
                    {
                        "description": "ID",
                        "name": "ribbon_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value": "1e937f76-e7f5-11e8-b634-98f2b334ac64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/home_ribbons_v3": {
            "get": {
                "description": "Get ribbons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ribbon"
                ],
                "summary": "List ribbons",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/home_banners_v3": {
            "get": {
                "description": "Get Home Banners V3 : chỉ có data khi giá trị page_id ở file config có tồn tại trong menus.id của collection ribbon_v3 with status = 1 type = 0",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Get Home Banners V3",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/page_ribbons_v3/{page_id}": {
            "get": {
                "description": "GetPageRibbonsV3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ribbon"
                ],
                "summary": "Get Page Ribbons V3",
                "parameters": [
                    {
                        "description": "Là giá trị menu.id trong collection rib_v3",
                        "name": "page_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value": "ac152fb2-7088-4b2e-87ee-dcd249a758a6"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/page_banners_v3/{page_id}": {
            "get": {
                "description": "GetPageBannersV3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Get Page Banners V3",
                "parameters": [
                    {
                        "description": "menu.id of COLLECTION_RIB_V3 with condition status = 1, type = 0",
                        "name": "page_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "value": "ac152fb2-7088-4b2e-87ee-dcd249a758a6"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 8
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/ribbon_v3": {
            "post": {
                "description": "Get Slug Ribbon V3",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ribbon"
                ],
                "summary": "Get Slug Ribbon V3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "/tuyen-tap/[slug trong collection ribbon_v3 voi status = 1]",
                        "name": "ribbon_slug",
                        "in": "formData",
                        "required": true,
                        "value": "/tuyen-tap/tuyen-tap-lam-vy-da-bjioy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/slug/page_ribbons_v3": {
            "post": {
                "description": "Get Slug Page Ribbons",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ribbon"
                ],
                "summary": "Get Slug Page Ribbons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "/danh-muc/[slug trong table menu_item]",
                        "name": "page_slug",
                        "in": "formData",
                        "required": true,
                        "value": "/danh-muc/phim-bo"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/slug/page_banners_v3": {
            "post": {
                "description": "Get Slug Page Banners",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "GetSlugPageBanners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "/danh-muc/[slug of collection rib_v3 (slug of menus)]",
                        "name": "page_slug",
                        "in": "formData",
                        "required": true,
                        "value": "/danh-muc/phim-bo"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/menu": {
            "get": {
                "description": "Get List Menu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "GetListMenu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/related/{content_id}": {
            "get": {
                "description": "Get Related By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Related By Id",
                "parameters": [
                    {
                        "description": "id in collection vod with type=1",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value": "d82cd5f2-a749-41d4-8a81-7de7248cd459"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/related": {
            "post": {
                "description": "Get Related By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "GetRelatedBySlug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gia tri slug_seo in collection vod",
                        "name": "entity_slug",
                        "in": "formData",
                        "required": true,
                        "value": "/game-show/tv-show/viet-huong-chi-tai-hoang-hon-khi-kha-nhu-doi-ra-mv-1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/related_videos/{group_id}": {
            "get": {
                "description": "Get Related Videos By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Related Videos By Id",
                "parameters": [
                    {
                        "description": "group_id",
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/related_videos": {
            "post": {
                "description": "Get Related Videos By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Related Videos By Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug_seo of collection vod with type = 6 (trailer)",
                        "name": "entity_slug",
                        "in": "formData",
                        "required": true,
                        "value": "/phim-bo/trung-quoc/bach-phat-vuong-phi-1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/slug/tags/contents": {
            "post": {
                "description": "Get Tags By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get Tags By Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug in table tag",
                        "name": "tags",
                        "in": "formData",
                        "required": true,
                        "value": "['/xuyen-khong']"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/tags/contents": {
            "post": {
                "description": "Get Tags By Id",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get Tags By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id tag",
                        "name": "tags",
                        "in": "formData",
                        "required": true,
                        "value": "['07197735-853e-48b1-9687-7f45e932bab2']"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/tags/category": {
            "get": {
                "description": "Get Tags Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get Tags Category",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/artist/contents/{people_id}": {
            "get": {
                "description": "Get Content Artist By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get Content Artist By ID",
                "parameters": [
                    {
                        "description": "id of table people",
                        "name": "people_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value": "0073f650-1cfb-4525-a63f-c45592784aef"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    },
                    {
                        "type": "number",
                        "description": "sort",
                        "name": "sort",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/artist/contents": {
            "post": {
                "description": "Get Content Artist By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get Content Artist By Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "people_slug",
                        "name": "people_slug",
                        "in": "formData",
                        "required": true,
                        "value": "dang-luan"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/artist/info/{people_id}": {
            "get": {
                "description": "Get Artist ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get Artist ID",
                "parameters": [
                    {
                        "description": "id of table people",
                        "name": "people_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value": "0073f650-1cfb-4525-a63f-c45592784aef"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/artist": {
            "post": {
                "description": "Get Artist By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get Artist By Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "people_slug",
                        "name": "people_slug",
                        "in": "formData",
                        "required": true,
                        "value": "dang-luan"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/artist/related/{people_id}": {
            "get": {
                "description": "Get Artist Related By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get Artist Related By ID",
                "parameters": [
                    {
                        "description": "id of table people",
                        "name": "people_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "02ebf34b-635c-4cff-a8c7-edc41eda741b"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "We need ID!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find ",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/artist/related": {
            "post": {
                "description": "Get Artist Related By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get Artist Related By Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "people_slug",
                        "name": "people_slug",
                        "in": "formData",
                        "required": true,
                        "value": "lee-min-ho"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/setting": {
            "get": {
                "description": "Get Setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "setting"
                ],
                "summary": "Get Setting",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add Setting",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "setting"
                ],
                "summary": "Add Setting",
                "parameters": [
                    {
                        "description": "Information tag",
                        "name": "group",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Information tag",
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Information tag",
                        "name": "value",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/local_data": {
            "get": {
                "description": "Get Local Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "local"
                ],
                "summary": "Get Local Info",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/version/data": {
            "get": {
                "description": "Get Versio Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "version_data"
                ],
                "summary": "Get Versio Data",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query",
                        "value": "minh lan"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/search/suggest": {
            "get": {
                "description": "Search Suggest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search Suggest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query",
                        "value": "minh lan"
                    },
                    {
                        "type": "string",
                        "description": "tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/search/search_keywords": {
            "get": {
                "description": "Get Search Keyword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get Search Keyword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/tracking/event": {
            "post": {
                "description": "Tracking Event",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendation"
                ],
                "summary": "Tracking Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tracking_id",
                        "name": "tracking_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tracking_type",
                        "name": "tracking_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "event_type",
                        "name": "event_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "item_id",
                        "name": "item_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "duration",
                        "name": "duration",
                        "in": "formData",
                        "required": true,
                        "value": 30
                    },
                    {
                        "type": "number",
                        "description": "percentage",
                        "name": "percentage",
                        "in": "formData",
                        "required": true,
                        "value": 30
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "GetListEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "live_event"
                ],
                "summary": "GetListEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/events/{event_id}": {
            "get": {
                "description": "Get List Event By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "live_event"
                ],
                "summary": "Get List Event By ID",
                "parameters": [
                    {
                        "description": "id of collection live_event",
                        "name": "event_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "3a30d13c-69f9-4e9b-b67a-518dce544a6e"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/events": {
            "post": {
                "description": "Get List Event By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "live_event"
                ],
                "summary": "Get List Event By Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug of collection live_event",
                        "name": "live_event_slug",
                        "in": "formData",
                        "required": true,
                        "value": "bi-mat-sau-lung-me"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/tracking-notification": {
            "post": {
                "description": "Tracking Notification",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking"
                ],
                "summary": "Tracking Notification",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/channel/list": {
            "get": {
                "description": "Get LiveTV",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get LiveTV",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "android"
                    },
                    {
                        "type": "string",
                        "description": "category",
                        "name": "category",
                        "in": "query",
                        "value": ""
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/channel/custom_category": {
            "post": {
                "description": "Custom Category LiveTV",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Custom Category LiveTV",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/channel/detail/{channel_id}": {
            "get": {
                "description": "Get Detail LiveTV",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get Detail LiveTV",
                "parameters": [
                    {
                        "description": "channel_id",
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "event_id"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/channel/detail": {
            "post": {
                "description": "Get Slug Detail LiveTV",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get Slug Detail LiveTV",
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel_slug",
                        "name": "channel_slug",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/channel/category": {
            "get": {
                "description": "Get LiveTV Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get LiveTV Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "start",
                        "name": "start",
                        "in": "query",
                        "value": 0
                    },
                    {
                        "type": "number",
                        "description": "end",
                        "name": "end",
                        "in": "query",
                        "value": 10
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 999
                    },
                    {
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/channel/epg": {
            "get": {
                "description": "Get Live Epg",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get Live Epg",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "start",
                        "name": "start",
                        "in": "query",
                        "value": 0
                    },
                    {
                        "type": "number",
                        "description": "end",
                        "name": "end",
                        "in": "query",
                        "value": 10
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 999
                    },
                    {
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/content/{content_id}/tips": {
            "get": {
                "description": "Get Content Tip By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Content Tip By Id",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "0b933b28-ac9f-40ca-b63d-9863cc3f9ffa"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "string",
                        "description": "eps_id",
                        "name": "eps_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/tracking/watch": {
            "post": {
                "description": "Tracking Watch By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking"
                ],
                "summary": "Tracking Watch By User",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/content/{content_id}": {
            "get": {
                "description": "Get Content By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Content By Id",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "0b933b28-ac9f-40ca-b63d-9863cc3f9ffa"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/content_detail/{content_id}": {
            "get": {
                "description": "Get Content Detail By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Content Detail By Id",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "0b933b28-ac9f-40ca-b63d-9863cc3f9ffa"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/content": {
            "post": {
                "description": "Get Content By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Content By Slug",
                "parameters": [
                    {
                        "description": "entity_slug",
                        "name": "entity_slug",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "value" : "/phim-bo/trung-quoc/phu-dao-hoang-hau-long-tieng-123/tap-75"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/episode/{content_id}": {
            "get": {
                "description": "Get Episode By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Episode By Id",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "6d1ef823-3322-4ab3-b156-0934aecc920c"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/episode_range/{content_id}": {
            "get": {
                "description": "Get Episode Range By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Episode Range By Id",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "value" : "6d1ef823-3322-4ab3-b156-0934aecc920c"
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/slug/episode": {
            "post": {
                "description": "Get Episode By Slug",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Episode By Slug",
                "parameters": [
                    {
                        "description": "slug_seo of collection vod",
                        "name": "entity_slug",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "value" : "/phim-bo/han-quoc/bi-mat-sau-lung-me-phan-1/tap-17-b312312"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/watchlater": {
            "get": {
                "description": "Get  Watch later By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "watchlater"
                ],
                "summary": "Get  Watch later By User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add Watch later By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "watchlater"
                ],
                "summary": "Add Watch later By User",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/channel/favorite/list": {
            "get": {
                "description": "Get Channel Favorite By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get Channel Favorite By User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/channel/favorite/add": {
            "post": {
                "description": "Add Channel Favorite By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Add Channel Favorite By User",
                "parameters": [
                    {
                        "description": "channel_ids",
                        "name": "channel_ids",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/channel/watched/list": {
            "get": {
                "description": "Get Channel Watched By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Get Channel Watched By User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/channel/watched/add": {
            "post": {
                "description": "Add Channel Watched By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "livetv"
                ],
                "summary": "Add Channel Watched By User",
                "parameters": [
                    {
                        "description": "channel_ids",
                        "name": "channel_ids",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/watchmore": {
            "get": {
                "description": "List Watching By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "tracking"
                ],
                "summary": "List Watching By User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/message/count": {
            "get": {
                "description": "Count Message By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "message"
                ],
                "summary": "Count Message By User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/message": {
            "get": {
                "description": "List Message By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "message"
                ],
                "summary": "List Message By User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "boolean",
                        "description": "cache",
                        "name": "cache",
                        "in": "query",
                        "value": true
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Action Message By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "message"
                ],
                "summary": "Action Message By User",
                "parameters": [
                    {
                        "description": "message_id",
                        "name": "message_id",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "action",
                        "name": "action",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/search_histories": {
            "get": {
                "description": "Get History Search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get History Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    },
                    {
                        "type": "number",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "value": 15
                    },
                    {
                        "type": "number",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "value": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/token-drm": {
            "get": {
                "description": "Get Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "vcab_drm"
                ],
                "summary": "Get Token",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": "object"
                        }
                    },
                    "400": {
                        "description": "Error!!",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Can not find api",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/rating/{content_id}/{point}": {
            "post": {
                "description": "Action Rating By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "rating"
                ],
                "summary": "Action Rating By User",
                "parameters": [
                    {
                        "description": "content_id",
                        "name": "content_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "value" : "content_id"
                    },
                    {
                        "description": "point",
                        "name": "point",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "value" : "point"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/giftcode/use": {
            "post": {
                "description": "Use Code",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "giftcode"
                ],
                "summary": "Use code",
                "parameters": [
                    {
                        "description": "code",
                        "name": "code",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "value" : "code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/push-token": {
            "post": {
                "description": "Save Data Push Token By User",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "message"
                ],
                "summary": "Save Data Push Token By User",
                "parameters": [
                    {
                        "description": "push_token",
                        "name": "push_token",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "value" : "push_token"
                    },
                    {
                        "type": "string",
                        "description": "platform",
                        "name": "platform",
                        "in": "query",
                        "value": "web"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}